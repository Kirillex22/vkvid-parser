import os
import json
import src as config
from typing import Dict

from src import MAPPING_FILE, browser_provider, PROFILE_PATH, set_download_path
from src.mappers import map_vk_video_link_to_static_video_source
from src.parsers import get_src_videos_from_vkvideo_page
from src.scripts import vk_login
from src.utils import dump_static_video_source, load_static_video_source, ensure_data_dir
from src.video_loaders import download_video_from_static_video_source


def main():
    config.load_configuration()
    ensure_data_dir()

    if not os.path.exists(PROFILE_PATH):
        with browser_provider(True) as browser:
            vk_login(browser)

    with browser_provider(False) as browser:
        while True:
            input('–ù–∞–∂–º–∏—Ç–µ ENTER, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å...')
            os.system('cls' if os.name == 'nt' else 'clear')

            print(f"\n=== VK Video Parser ===")
            print("1. –í—Å—Ç–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É –∏ —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ")
            print("2. –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –¥–∞–º–ø–Ω—É—Ç—ã–µ —Ä–æ–ª–∏–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ ID: –ù–∞–∑–≤–∞–Ω–∏–µ")
            print("3. –°–∫–∞—á–∞—Ç—å —Ä–æ–ª–∏–∫ –ø–æ ID")
            print(f"4. –£–∫–∞–∑–∞—Ç—å –ø–∞–ø–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è (—Ç–µ–∫—É—â–∞—è: {config.DOWNLOAD_PATH})")
            print(f"5. –£–∫–∞–∑–∞—Ç—å —Ç–∞–π–º–∞—É—Ç –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å —Ä–æ–ª–∏–∫–æ–º (—Ç–µ–∫—É—â–∏–π: {config.PAGE_LOADING_TIMEOUT_MS} –º—Å)")
            print("0. –í—ã—Ö–æ–¥")
            choice = input("üëâ –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ")

            if choice == "1":
                url = input("–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ: ").strip()
                try:
                    title, files = get_src_videos_from_vkvideo_page(browser, url)
                    print(f"\n–ù–∞–π–¥–µ–Ω–æ –≤–∏–¥–µ–æ: {title}")
                    print("–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞—á–µ—Å—Ç–≤–∞:")
                    for i, (ftype, link) in enumerate(files.items(), start=1):
                        print(f"{i}. {ftype}")

                    sel = int(input("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ: "))
                    ftype, link = list(files.items())[sel - 1]

                    src = map_vk_video_link_to_static_video_source(title, ftype, link)
                    dump_static_video_source(src)
                    print(f"\n–í–∏–¥–µ–æ –¥–∞–º–ø–Ω—É—Ç–æ! ID: —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ mapping.json")

                    if input("–°–∫–∞—á–∞—Ç—å —Å–µ–π—á–∞—Å? (y/n): ").lower() == "y":
                        download_video_from_static_video_source(src)

                except Exception as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞: {e}")


            elif choice == "2":
                with open(MAPPING_FILE, "r", encoding="utf-8") as f:
                    mapping: Dict[str, str] = json.load(f)
                if not mapping:
                    print("–ü–æ–∫–∞ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–∞–º–ø–Ω—É—Ç–æ.")
                else:
                    print("\n–î–∞–º–ø–Ω—É—Ç—ã–µ —Ä–æ–ª–∏–∫–∏:")
                    for _id, title in mapping.items():
                        print(f"{_id} ‚Üí {title}")

            elif choice == "3":
                vid = input("–í–≤–µ–¥–∏—Ç–µ ID —Ä–æ–ª–∏–∫–∞: ").strip()
                try:
                    src = load_static_video_source(vid)
                    print(f"–í—ã–±—Ä–∞–Ω —Ä–æ–ª–∏–∫: {src.title}")
                    download_video_from_static_video_source(src)
                except Exception as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

            elif choice == "4":
                path = input("–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –ø–∞–ø–∫–∏: ")
                try:
                    if set_download_path(path):
                        print("–£—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –Ω–æ–≤–∞—è –ø–∞–ø–∫–∞.")
                    else:
                        print("–ü–∞–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
                except Exception as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

            elif choice == "5":
                try:
                    timeout = input("–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö: ")
                    if config.set_page_load_timeout(timeout):
                        print("–£—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–æ–≤—ã–π —Ç–∞–π–º–∞—É—Ç.")

                    else:
                        print("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —á–∏—Å–ª–∞.")

                except Exception as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

            elif choice == "0":
                print("üëã –í—ã—Ö–æ–¥")
                break
            else:
                print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!")


if __name__ == "__main__":
    main()
